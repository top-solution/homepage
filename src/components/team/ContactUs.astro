---
import Hex from "../../components/Hex.astro";
import FormTitleHex from "../../components/FormTitleHex.astro";
import Textfield from "../../components/TextField.astro";
import Button from "../../components/Button.astro";

import HoneypotField from "../../components/HoneypotField.astro";

export let open = "false";
let toastEl = null;

let bot = false;
let form = {
  name: "",
  age: "",
  graduation: "",
  graduationGrade: "",
  experience: "",
  email: "",
  phone: "",
  curriculum: null,
};

let formErrors = {
  name: null,
  age: null,
  graduation: null,
  graduationGrade: null,
  experience: null,
  email: null,
  phone: null,
  curriculum: null,
};

let curriculumInputElement;

function formDeleteClick() {
  form.curriculum = null;
  curriculumInputElement.value = "";
}

function handleSubmit(event) {
  event.preventDefault();

  if (bot) {
    return;
  }

  if (!form.name || form.name.length === 0) {
    formErrors.name = " ";
  }
  if (!form.age || form.age.length === 0) {
    formErrors.age = " ";
  }
  if (!form.graduation || form.graduation.length === 0) {
    formErrors.graduation = " ";
  }
  if (!form.graduationGrade || form.graduationGrade.length === 0) {
    formErrors.graduationGrade = " ";
  }
  if (!form.experience || form.experience.length === 0) {
    formErrors.experience = " ";
  }
  if (!form.email || form.email.length === 0) {
    formErrors.email = " ";
  }
  if (/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(form.email) == false) {
    formErrors.email = "Indirizzo email non valido";
  }
  if (!form.curriculum) {
    formErrors.curriculum = "Allegare un CV in formato PDF";
  }

  if (Object.values(formErrors).find((err) => err !== null)) {
    console.log(formErrors);
    return;
  }

  console.log(event, form);

  form = {
    name: "",
    age: "",
    graduation: "",
    graduationGrade: "",
    experience: "",
    email: "",
    phone: "",
    curriculum: null,
  };

  toastEl.show();

  document.querySelector("body").scrollIntoView({ behavior: "smooth" });
}
---

<script>
  let formErrors = {
    name: null,
    age: null,
    graduation: null,
    graduationGrade: null,
    experience: null,
    email: null,
    phone: null,
    curriculum: null,
  };
</script>

<form id="form" onsubmit={handleSubmit}>
  <div class="floating-hex-1">
    <Hex width="111" fill="#312783" shadow="true" />
  </div>
  <section>
    <FormTitleHex />
    <h2>Candidatura <b>spontanea</b></h2>
    <p>
      Vuoi far parte del <b>nostro team</b>?
    </p>
    <p>
      <b>Inviaci</b> la tua <b>candidatura spontanea</b>
    </p>
    <div class="form">
      <div class="form-row">
        <div class="textfield textfield-name">
          <Textfield outlined required name="name" error={formErrors.name} label="Nome Cognome *" value={form.name}
            onchange={(e)=> (form.name = e.target.value)}
            onkeyup={(e) => {
            if (e.target.value.length) {
            formErrors.name = null;
            }
            }}
            />
        </div>
        <div class="textfield textfield-age">
          <Textfield outlined required name="age" error={formErrors.age} onkeyup={(e)=>
            {
            if (e.target.value.length) {
            formErrors.age = null;
            }
            }}
            type="number"
            min="0"
            max="99"
            label="EtÃ  *"
            value={form.age}
            onchange={(e) => (form.age = e.target.value)}
            />
        </div>
        <div class="textfield textfield-experience">
          <Textfield outlined required name="experience" error={formErrors.experience} onkeyup={(e)=> {
            if (e.target.value.length) {
            formErrors.experience = null;
            }
            }}
            type="number"
            min="0"
            max="99"
            label="Anni di esperienza *"
            value={form.experience}
            onchange={(e) => (form.experience = e.target.value)}
            />
        </div>
      </div>
      <div class="form-row">
        <div class="textfield textfield-graduation">
          <Textfield outlined required name="graduation" error={formErrors.graduation} onkeyup={(e)=> {
            if (e.target.value.length) {
            formErrors.graduation = null;
            }
            }}
            label="Titolo di studio *"
            value={form.graduation}
            onchange={(e) => (form.graduation = e.target.value)}
            />
        </div>
        <!-- onkeyup={(e) => {
            if (e.target.value.length) {
              formErrors.graduationGrade = null;
            }
          }} -->
        <div class="textfield textfield-graduation-grade">
          <Textfield outlined required name="graduation-grade" error={formErrors.graduationGrade} type="number"
            label="Votazione *" min="0" max="110" value={form.graduationGrade} onchange={(e)=> (form.graduationGrade =
            e.target.value)}
            />
        </div>
      </div>
      <div class="form-row">
        <div class="textfield textfield-email">
          <Textfield outlined required name="email" error={formErrors.email} onkeyup={(e)=> {
            if (e.target.value.length) {
            formErrors.email = null;
            }
            }}
            type="email"
            label="Email *"
            value={form.email}
            onchange={(e) => (form.email = e.target.value)}
            />
        </div>
        <div class="textfield textfield-phone">
          <Textfield outlined name="phone" error={formErrors.phone} onkeyup={(e)=> {
            if (e.target.value.length) {
            formErrors.phone = null;
            }
            }}
            label="Cellulare"
            value={form.phone}
            onchange={(e) => (form.phone = e.target.value)}
            />
        </div>
      </div>
      { form.curriculum && (<div class="cv-form-row">
        <p>{`${form.curriculum}`.replace("/", "\\").substring(`${form.curriculum}`.lastIndexOf("\\") + 1)}</p>
        <img src="../img/icons/delete.svg" alt="remove icon" onclick="formDeleteClick()}" />
      </div>
      )}
      <div class="cv-button-form-row">
        <!--
            onchange={(e) => {
            form.curriculum = e.target.value;
            formErrors.curriculum = null;
          }}
        -->
        <input type="file" id="curriculum-upload" class="curriculum-upload" name="curriculum"
          accept="application/pdf" />
        {formErrors.curriculum && (
        <p class="cv-error-text">{formErrors.curriculum}</p>
        )}
        <label class="curriculum-upload-label" for="curriculum-upload">
          ALLEGA CV
          <img src="../img/icons/attachment.svg" alt="" />
        </label>
      </div>
      <HoneypotField onchange={()=> (bot = true)} />
        <div class="submit-button-form-row submit" id="button">
          <Button component="button" variant="secondary">
            Invia
          </Button>
        </div>
    </div>
  </section>
</form>
<div id="toast" class="ts-toast">Grazie per aver inviato la tua candidatura spontanea!</div>


<script>
  let bot = false;
  let form = {
    name: "",
    age: "",
    graduation: "",
    graduationGrade: "",
    experience: "",
    email: "",
    phone: "",
    curriculum: null,
  };

  let formErrors = {
    name: null,
    age: null,
    graduation: null,
    graduationGrade: null,
    experience: null,
    email: null,
    phone: null,
    curriculum: null,
  };

  function handleSubmit(event) {
    event.preventDefault();

    if (bot) {
      return;
    }

    if (!form.name || form.name.length === 0) {
      formErrors.name = " ";
    }
    if (!form.age || form.age.length === 0) {
      formErrors.age = " ";
    }
    if (!form.graduation || form.graduation.length === 0) {
      formErrors.graduation = " ";
    }
    if (!form.graduationGrade || form.graduationGrade.length === 0) {
      formErrors.graduationGrade = " ";
    }
    if (!form.experience || form.experience.length === 0) {
      formErrors.experience = " ";
    }
    if (!form.email || form.email.length === 0) {
      formErrors.email = " ";
    }
    if (/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(form.email) == false) {
      formErrors.email = "Indirizzo email non valido";
    }
    if (!form.curriculum) {
      formErrors.curriculum = "Allegare un CV in formato PDF";
    }

    if (Object.values(formErrors).find((err) => err !== null)) {
      console.log(formErrors); //To Manage - FIXME
      return;
    }

    form = {
      name: "",
      age: "",
      graduation: "",
      graduationGrade: "",
      experience: "",
      email: "",
      phone: "",
      curriculum: null,
    };

    showToast();
  }

  function showToast() {
    document.querySelector("#toast").classList.add("visible");
    setTimeout(() => {
      document.querySelector("#toast").classList.remove("visible");
    }, 6000);
  }

  document.getElementById("form").addEventListener("submit", handleSubmit);
</script>
<style>
  form {
    position: relative;
    margin-top: var(--spacing-8);
    max-width: var(--breakpoint-mobile-max);
    margin: auto;
  }

  section {
    position: relative;
    max-height: 0;
    transition: max-height var(--transition-timing-default) var(--transition-function-default),
      padding-top var(--transition-timing-default) var(--transition-function-default);
    overflow: hidden;
    padding-top: 0px;
  }

  section p {
    font-size: 22px;
    text-align: center;
  }

  h2 {
    text-align: center;
    margin-bottom: var(--spacing-4);
  }

  .floating-hex-1 {
    position: absolute;
    left: -420px;
    top: -580px;
  }

  .form {
    margin: var(--spacing-6) 0;
    display: block;
  }

  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 var(--spacing-1) * -1 0;
    justify-content: space-between;
  }

  .curriculum-upload {
    display: none;
  }

  .cv-form-row {
    align-items: center;
    background-color: #f1f1f1;
    display: flex;
    justify-content: space-between;
    padding: 0 24px;
    height: var(--spacing-4);
    border-radius: 2px;
    display: flex;
    margin: 0 0 var(--spacing-2) 0;
  }

  .cv-form-row p {
    color: black;
    font-size: 15px;
    font-weight: 300;
    margin: 0;
  }

  .cv-form-row img {
    width: 18px;
    height: 18px;
    opacity: 0.8;
    margin-left: auto;
  }

  .cv-form-row img:hover {
    cursor: pointer;
    opacity: 1;
  }

  .cv-button-form-row {
    display: flex;
    align-items: center;
    margin: var(--spacing-3) 0;
    flex-direction: column-reverse;
    align-items: stretch;
  }

  .curriculum-upload-label {
    /* Fake button, can't use component due to WebComponents limitations */
    color: white;
    background-color: #211a58;
    margin-left: auto;
    margin-bottom: var(--spacing-2);
    align-items: center;
    border-radius: 4px;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-size: 15px;
    font-style: normal;
    font-weight: 500;
    height: 42px;
    justify-content: center;
    letter-spacing: 0.46px;
    line-height: 26px;
    padding: 8px 22px;
    text-transform: uppercase;
    white-space: nowrap;
    user-select: none;
    border: 0;
    transition: background-color var(--transition-timing-quick) var(--transition-function-default),
      border-color var(--transition-timing-quick) var(--transition-function-default);
  }

  .curriculum-upload-label img {
    height: 18px;
    margin-left: var(--spacing-1);
  }

  .curriculum-upload-label:hover {
    background-color: var(--color-blue-light);
  }

  .cv-error-text {
    color: var(--color-error-text);
    font-size: 16px;
    margin: 0;
    font-weight: 400;
  }

  .textfield {
    margin: 0 var(--spacing-1) var(--spacing-3);
  }

  .textfield-name {
    flex: 0 0 40%;
  }

  .textfield-age {
    flex: 0 0 20%;
  }

  .textfield-experience {
    flex: 0 0 30%;
  }

  .textfield-graduation {
    flex: 0 0 70%;
  }

  .textfield-graduation-grade {
    flex: 0 0 20%;
  }

  .textfield-email,
  .textfield-phone {
    flex: 0 0 45%;
  }

  .submit-button-form-row {
    display: flex;
  }

  .submit {
    justify-content: center;
  }

  @media only screen and (min-width: 601px) {
    form {
      margin-top: 0;
    }

    section {
      max-height: 1100px;
    }

    .textfield {
      margin: 0 var(--spacing-1) 0;
    }

    .textfield-name .textfield-graduation .textfield-email .textfield-phone {
      flex: 1 1 0;
    }

    .textfield-age .textfield-graduation-grade {
      flex: 0 0 110px;
    }

    .cv-button-form-row {
      flex-direction: row;
      align-items: center;
    }

    .curriculum-upload-label {
      flex: 0 0 172px;
      margin-left: auto;
      margin-bottom: 0;
    }
  }

  @media only screen and (max-width: 600px) {

    .form-row {
      margin: 0 var(--spacing-1);
      justify-content: space-between;
    }

    .textfield {
      flex: 0 0 100%;
    }

    .textfield-age,
    .textfield-graduation {
      flex: 0 0 45%;
    }

    .textfield-experience,
    .textfield-graduation-grade {
      flex: 0 0 45%;
      margin-right: 0;
    }
  }
</style>